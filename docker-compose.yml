version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: una-postgres
    environment:
      POSTGRES_DB: una_email
      POSTGRES_USER: una_email
      POSTGRES_PASSWORD: ${DB_PASSWORD:-una_email_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Postfix Mail Server with Node.js handler
  postfix:
    image: ghcr.io/${GITHUB_REPOSITORY:-roncanfil/una.email}/mail:${IMAGE_TAG:-latest}
    container_name: una-postfix
    environment:
      POSTFIX_HOSTNAME: mail.${DOMAIN}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: una_email
      DB_USER: una_email
      DB_PASSWORD: ${DB_PASSWORD}
      DOMAIN: ${DOMAIN}
      SKIP_CONFIG: "true"
    volumes:
      - ./mail/main.cf:/etc/postfix/main.cf
      - ./mail/master.cf:/etc/postfix/master.cf
      - ./mail/transport:/etc/postfix/transport
      - ./mail/virtual:/etc/postfix/virtual
      - ./mail/entrypoint.sh:/app/entrypoint.sh
      - ./letsencrypt/etc:/etc/letsencrypt
    ports:
      - "25:25"
    depends_on:
      - postgres
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: una-nginx
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/default.conf.template
      - ./nginx/entrypoint.sh:/entrypoint.sh
      - ./letsencrypt/etc:/etc/letsencrypt
      - ./web-root:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${DOMAIN}
    command: ["/bin/bash", "-c", "chmod +x /entrypoint.sh && /entrypoint.sh"]
    depends_on:
      - web
    restart: unless-stopped

  # Certbot is now only used for renewal, not initial creation.
  certbot:
    image: certbot/certbot:latest
    container_name: una-certbot
    volumes:
      - ./letsencrypt/etc:/etc/letsencrypt
      - ./web-root:/var/www/certbot

  # Next.js Web Application
  web:
    image: ghcr.io/${GITHUB_REPOSITORY:-roncanfil/una.email}/web:${IMAGE_TAG:-latest}
    container_name: una-web
    environment:
      DATABASE_URL: postgresql://una_email:${DB_PASSWORD:-una_email_password}@postgres:5432/una_email
      DOMAIN: ${DOMAIN:-mydomain.local}
      PORT: 3000
      NODE_ENV: ${NODE_ENV:-production}
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
